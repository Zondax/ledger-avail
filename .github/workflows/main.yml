name: Build
on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      - main
      - develop
      - master
      - dev

jobs:
  ledger-build:
    uses: Zondax/_workflows/.github/workflows/_ledger_main.yml@v3
    with:
      runs-on: ${{ github.repository_owner == 'zondax' && 'zondax-runners' || 'ubuntu-latest' }}
      has-rust: false
      has-nanos: false
      node-version: "22"

  build_package_recovery_nanosp:
    needs: ledger-build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ${{ github.repository_owner == 'zondax' && 'zondax-runners' || 'ubuntu-latest' }}
    container:
      image: zondax/ledger-app-builder:latest
    env:
      BOLOS_SDK: /opt/nanosplus-secure-sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install deps
        run: pip install ledgerblue --break-system-packages
      - name: Build NanoSP
        shell: bash -l {0}
        run: |
          PRODUCTION_BUILD=0 COIN=AVAIL_RECOVERY make
          mv ./app/pkg/installer_s2.sh ./app/pkg/installer_recovery_nanos_plus.sh
      - name: Set tag
        id: nanosp
        run: echo "tag_name=$(./app/pkg/installer_recovery_nanos_plus.sh version)" >> $GITHUB_OUTPUT
      - name: Update Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./app/pkg/installer_recovery_nanos_plus.sh
          tag_name: ${{ steps.nanosp.outputs.tag_name }}
          draft: false
          prerelease: false

  build_package_recovery_stax:
    needs: ledger-build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ${{ github.repository_owner == 'zondax' && 'zondax-runners' || 'ubuntu-latest' }}
    container:
      image: zondax/ledger-app-builder:latest
    env:
      BOLOS_SDK: /opt/stax-secure-sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install deps
        run: pip install ledgerblue --break-system-packages
      - name: Build Stax
        shell: bash -l {0}
        run: |
          PRODUCTION_BUILD=0 COIN=AVAIL_RECOVERY make
          mv ./app/pkg/installer_stax.sh ./app/pkg/installer_recovery_stax.sh
      - name: Set tag
        id: stax
        run: echo "tag_name=$(./app/pkg/installer_recovery_stax.sh version)" >> $GITHUB_OUTPUT
      - name: Update Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./app/pkg/installer_recovery_stax.sh
          tag_name: ${{ steps.stax.outputs.tag_name }}
          draft: false
          prerelease: false

  build_package_recovery_flex:
    needs: ledger-build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ${{ github.repository_owner == 'zondax' && 'zondax-runners' || 'ubuntu-latest' }}
    container:
      image: zondax/ledger-app-builder:latest
    env:
      BOLOS_SDK: /opt/flex-secure-sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install deps
        run: pip install ledgerblue --break-system-packages
      - name: Build Flex
        shell: bash -l {0}
        run: |
          PRODUCTION_BUILD=0 COIN=AVAIL_RECOVERY make
          mv ./app/pkg/installer_flex.sh ./app/pkg/installer_recovery_flex.sh
      - name: Set tag
        id: flex
        run: echo "tag_name=$(./app/pkg/installer_recovery_flex.sh version)" >> $GITHUB_OUTPUT
      - name: Update Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./app/pkg/installer_recovery_flex.sh
          tag_name: ${{ steps.flex.outputs.tag_name }}
          draft: false
          prerelease: false

  build_package_recovery_apex_p:
    needs: ledger-build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ${{ github.repository_owner == 'zondax' && 'zondax-runners' || 'ubuntu-latest' }}
    container:
      image: zondax/ledger-app-builder:latest
    env:
      BOLOS_SDK: /opt/apex-secure-sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install deps
        run: pip install ledgerblue --break-system-packages
      - name: Build Apex P
        shell: bash -l {0}
        run: |
          PRODUCTION_BUILD=0 COIN=AVAIL_RECOVERY make
          mv ./app/pkg/installer_apex_p.sh ./app/pkg/installer_recovery_apex_p.sh
      - name: Set tag
        id: apex_p
        run: echo "tag_name=$(./app/pkg/installer_recovery_apex_p.sh version)" >> $GITHUB_OUTPUT
      - name: Update Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./app/pkg/installer_recovery_apex_p.sh
          tag_name: ${{ steps.apex_p.outputs.tag_name }}
          draft: false
          prerelease: false
